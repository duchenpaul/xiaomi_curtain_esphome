<<: !include library/base.yaml

esphome:
  name: $device_name
  platform: ESP8266
  board: $board_model
  # esp8266_restore_from_flash: yes
  build_path: build/$device_name
  includes:
    - library/curtain.h
  on_boot:
    priority: -100.0
    then:
      - repeat:
          count: 5
          then:
            # Enable reverse
            - uart.write: "down set_properties 2 4 1\r"

status_led:
  pin:
    number: GPIO2
    inverted: True

logger:
  level: VERBOSE #makes uart stream available in esphome logstream
  baud_rate: 0 #disable logging over uart

substitutions:
  board_model: nodemcuv2
  device_name: curtain
  wifi_ssid: !secret wifi_ssid
  wifi_password: !secret wifi_password
  wifi_fast_connect: 'true'
  wifi_reboot_timeout: 600s
  ota_password: !secret ota_password
  api_reboot_timeout: 600s

globals:
  - id: cover_reversed
    type: bool
    restore_value: yes
    initial_value: "true"

uart:
  id: uart_bus
  tx_pin: D5
  rx_pin: D6
  baud_rate: 115200
  debug:
    direction: BOTH
    dummy_receiver: false
    after:
      delimiter: "\n"
    sequence:
      - lambda: UARTDebug::log_string(direction, bytes);

cover:
  - platform: custom
    lambda: |-
      auto curtain = new CustomCurtain(id(uart_bus));
      App.register_component(curtain);
      return {curtain};
    covers:
      - name: curtain
        device_class: curtain

custom_component:
  - lambda: |-
      return { new CustomAPI(id(uart_bus)) };
